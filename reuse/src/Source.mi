(* $Id: Source.mi,v 1.3 1997/05/27 11:57:56 grosch rel $ *)

(*
 * $Log: Source.mi,v $
 * Revision 1.3  1997/05/27 11:57:56  grosch
 * truncation of filenames to 8.3 format
 *
 * Revision 1.2  1994/02/10 22:28:33  grosch
 * removed unused objects
 *
 * Revision 1.1  1993/08/18  15:06:51  grosch
 * rename System and Memory to rSystem and rMemory
 *
 * Revision 1.0  1992/08/07  14:42:03  grosch
 * Initial revision
 *
 *)

(* Ich, Doktor Josef Grosch, Informatiker, Juli 1992 *)

IMPLEMENTATION MODULE Source;

FROM SYSTEM	IMPORT ADDRESS;
FROM rSystem	IMPORT tFile, OpenInput, rRead, rClose;

PROCEDURE BeginSource (FileName: ARRAY OF CHAR): tFile;
   BEGIN
      RETURN OpenInput (FileName);
   END BeginSource;

PROCEDURE GetLine (File: tFile; Buffer: ADDRESS; Size: CARDINAL): INTEGER;
(* # ifdef Dialog
   CONST IgnoreChar = ' ';
   VAR n	: INTEGER;
   VAR BufferPtr: POINTER TO ARRAY [0..30000] OF CHAR;
   BEGIN
      n := rRead (File, Buffer, Size);
      (* Add dummy after newline character in order to supply a lookahead for rex. *)
      (* This way newline tokens are recognized without typing an extra line.      *)
      BufferPtr := Buffer;
      IF (n > 0) AND (BufferPtr^[n - 1] = 012C) THEN BufferPtr^[n] := IgnoreChar; INC (n); END;
      RETURN n;
   END GetLine;
   # else *)
   BEGIN
      RETURN rRead (File, Buffer, Size);
   END GetLine;
(* # endif *)

PROCEDURE CloseSource (File: tFile);
   BEGIN
      rClose (File);
   END CloseSource;

END Source.
