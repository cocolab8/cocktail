CT_LIB	= "$(CT_DIR)"\lib
INCDIR	= $(CT_LIB)\include
CFLAGS	= /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE /I$(INCDIR)
CC	= cl /nologo
CPPC	= cl /nologo /MT
LDFLAGS	= $(CT_LIB)\libreuse.lib

SOURCES	= Scanner.h Scanner.c Parser.h Parser.c Tree.h Tree.c \
	  Semantic.h Semantic.c Types.h Types.c Defs.h Defs.c \
	  ICode.h ICode.c ICodeInt.h ICodeInt.c minilax.c

OBJS	= minilax.obj Scanner.obj Parser.obj Tree.obj \
	  Types.obj Defs.obj Semantic.obj ICode.obj ICodeInt.obj

all:	minilax
	if exist minilax.exe minilax < in1
	rem if test -f in5; then if exist minilax.exe minilax < in5; fi

run:	minilax
	$(MAKE) all

minilax:	$(OBJS)
	link /nologo /incremental:no /out:minilax.exe $(OBJS) $(LDFLAGS)

minilax-cpp:	$(SOURCES)
	$(CPPC) $(CFLAGS) /c *.c
	link /nologo /incremental:no /out:minilax.exe $(OBJS) $(CT_LIB)\librugpp.a 

Scanner.rpp Parser.lrk:	minilax.prs
	lpp -cxzj minilax.prs

minilax.rex:	minilax.scn Scanner.rpp
	rpp < minilax.scn > minilax.rex

Scanner.h Scanner.c:	minilax.rex
	rex -cd minilax.rex

Parser.h Parser.c:	Parser.lrk
	lark -cdis Parser.lrk

Tree.h Tree.c:	minilax.cg
	ast -cdimRDI0 minilax.cg

Semantic.h Semantic.c:	minilax.cg
	ag -cDI0 minilax.cg

Defs.h Defs.c Defs.TS:	Defs.cg
	ast -cdim4 Defs.cg

Tree.TS:	minilax.cg
	echo SELECT AbstractSyntax Output > temp1
	copy /b temp1 + minilax.cg temp2
	ast -c4 temp2
	del temp1
	del temp2

Types.h Types.c:	Types.pum Tree.TS
	puma -cdipku Types.pum

ICode.h ICode.c:	ICode.pum Tree.TS Defs.TS
	puma -cdiu ICode.pum

Parser.obj:	Parser.h Scanner.h Tree.h Types.h Defs.h
Semantic.obj:	Semantic.h Tree.h Defs.h Types.h
Tree.obj:		Tree.h
Defs.obj:		Defs.h Tree.h
Types.obj:	Tree.h Types.h Defs.h
ICode.obj:	Tree.h Types.h ICodeInt.h
minilax.obj:	Scanner.h Parser.h Tree.h Semantic.h Defs.h ICode.h ICodeInt.h Types.h

lint:	$(SOURCES)
	lint $(CFLAGS) -u *.c

test:	$(SOURCES)
	cg -cdimRDI0 minilax.cg
	$(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	tcsh /c "if exist minilax.exe minilax < in5; time minilax < in5; time minilax < in5; time minilax < in5"
	wc Semantic.c
	size Semantic.obj
	cg -cdimRDI09 minilax.cg
	$(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	if exist minilax.exe minilax < in5
	cg -cdimRDI minilax.cg
	$(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	tcsh /c "if exist minilax.exe minilax < in5; time minilax < in5; time minilax < in5; time minilax < in5"
	wc Semantic.c
	size Semantic.obj
	cg -cdimRDI9 minilax.cg
	$(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	if exist minilax.exe minilax < in5
	cg -cdimRDIL minilax.cg
	$(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	tcsh /c "if exist minilax.exe minilax < in5; time minilax < in5; time minilax < in5; time minilax < in5"
	wc Semantic.c
	size Semantic.obj
	cg -cdimRDIL9 minilax.cg
	$(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	if exist minilax.exe minilax < in5
	cg -cdimRDIK minilax.cg
	$(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	tcsh /c "if exist minilax.exe minilax < in5; time minilax < in5; time minilax < in5; time minilax < in5"
	wc Semantic.c
	size Semantic.obj
	cg -cdimRDIK9 minilax.cg
	$(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	if exist minilax.exe minilax < in5

test2:	$(SOURCES)
	@ echo "*** expect compile errors at options IL,I,IL,IK: inconsistent options for ast and ag"
	cg -cdimRD	minilax.cg
	cg -cI		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI0		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	-cg -cIL	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	cg -cIK		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cdimRD0	minilax.cg
	-cg -cI		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	cg -cI0		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	-cg -cIL	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	-cg -cIK	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB)
	cg -cdimRDL	minilax.cg
	cg -cI		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI0		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIL		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIK		minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1

trace:	$(SOURCES)
	cg -cdimRwDI09	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI09T	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI09YZ	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI09X	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI09Y	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI09Z	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cdimRwDI9	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI9T	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI9YZ	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI9X	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI9Y	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cI9Z	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cdimRwDIL9	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIL9T	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIL9YZ	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIL9X	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIL9Y	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIL9Z	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cdimRwDIK9	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIK9T	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIK9YZ	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIK9X	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIK9Y	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1
	cg -cIK9Z	minilax.cg; $(MAKE) clean_bin minilax CT_LIB=$(CT_LIB); minilax < in1

clean:
	del /F Scanner.? Parser.? Tree.? Semantic.? Defs.? Types.? ICode.? *.TS
	del /F core* *.dbg minilax minilax.rex Parser.lrk Scanner.rpp yy*.h *.obj
	del /F yyNode yySource

clean_bin:
	del /F minilax *.obj

.SUFFIXES:	.c .obj

.c.obj:
	$(CC) $(CFLAGS) /c $*.c
